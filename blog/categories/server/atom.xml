<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: server | 大头龙仔Blog]]></title>
  <link href="http://imlcl.com/blog/categories/server/atom.xml" rel="self"/>
  <link href="http://imlcl.com/"/>
  <updated>2013-08-21T23:52:38+08:00</updated>
  <id>http://imlcl.com/</id>
  <author>
    <name><![CDATA[imlcl]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[服务器基于slackware的KVM布署详解]]></title>
    <link href="http://imlcl.com/blog/2012/08/05/slackware-kvm/"/>
    <updated>2012-08-05T00:00:00+08:00</updated>
    <id>http://imlcl.com/blog/2012/08/05/slackware-kvm</id>
    <content type="html"><![CDATA[<p><strong>一、背景</strong>
首先呢，我发现自己有半年时间没有写技术类的文章了，其次，关于这个话题，我一直都想整理一篇比较好的文章出来，一来可以做个备忘，更重要是起到分享交流，共同进步。之前一直可能都有一些零零散散关于这部分细节的，但我觉得都看得不是很爽。另外，网上搜到大多数关于KVM的都是debian系或redhat系的，有部分内容和slackware有差异，并且由于slackware的文化，在KVM虚拟化这块，相比其它发行版要麻烦一点点，而slackware的简洁、稳定、快速是我一直所爱，所以更希望写下这篇文章。</p>




<p><strong>二、相关准备
</strong>1、装有slackware的主机一台，内存最好不要太少吧，如果4G或以上的，就装slackware64，当前slackware最新稳定版是13.37（37这个命名方式是和内核2.6.xx一致），因为是做物理主机的系统，所以稳定至上。至于如何安装slackware，可以看<a href="http://www.linuxsir.org/bbs/thread383703.html">slackbook中文译本</a>，反正基本流程是：光碟或U盘启动 -&gt; cfdisk分区 -&gt; setup安装 -&gt; 重启……，下载slackware可以到这里<a href="http://mirrors.163.com/slackware/">http://mirrors.163.com/slackware/</a>
2、KVM是什么，可以了解，随便一搜就有，还要确定你的CPU是否支持虚拟化技术；（<a href="http://baike.baidu.com/view/13605.htm">什么是虚拟化技术？</a>）<br />
3、因为我建立两个kvm，一个是slackware-current，一个是windows 2003，所以你也得要有2003的iso，安装2003请选择手动安装，最好是MSDN版本；<br />
4、虚拟机访问外网要使用网桥（package bridge-utils），但听说用VDE更方面，有兴趣可以看看<a href="http://wiki.alienbase.nl/doku.php?id=slackware:vde">这里</a>。老实说，VDE我弄了一下，好像很麻烦就没弄了……</p>




<p>
<img src="/images/blog/servers.jpg">
<strong>三、软件准备</strong>
物理服务器机器安装好slackware64 13.37后，那得得要准备相关的软件环境（均运行在root下面）：<br />
1、qemu-kvm<br />
2、tunctl（用来tap通讯）</p>




<p>1）qemu-kvm<br />
首先到slackbuilds.org下载<a href="http://slackbuilds.org/repository/13.37/system/qemu-kvm/">qemu-kvm</a>相关的编译准备文件（还有源码包），运行qemu-kvm.SlackBuild进行编译，OK后会在tmp生成一个名为qemu-kvm-1.0.1-x86_64-1_SBo.tgz的包，installpkg之。如果在编译过程中出现错误，那就得先排错，一般都是相关的依赖问题。<br />
2）tunctl<br />
同样地，下载<a href="http://slackbuilds.org/repository/13.37/network/tunctl/">tunctl</a>并编译之，得到tunctl-1.5-x86_64-2_SBo.tgz并installpkg之</p>




<p>这部分完毕</p>




<p><strong>四、设置网桥和Tap</strong>
KVM虚拟机通过tap来访问互联网，那么物理主机得设置好网桥，下面是我/etc/rc.d/rc.local里设置网桥和tap的代码
<strong># create brige</strong>
<strong>ifconfig eth0 0.0.0.0</strong>
<strong>brctl addbr br0</strong>
<strong>ifconfig br0 x.x.x.x(物理主机IP) netmask 255.255.255.0(物理主机掩码) up</strong>
<strong>route add default gw x.x.x.x(网关) br0</strong>
<strong>brctl addif br0 eth0</strong></p>




<p><strong># create tap0 for windows 2003</strong>
<strong>tunctl -t tap0</strong>
<strong>ifconfig tap0 up</strong>
<strong>brctl addif br0 tap0</strong></p>




<p><strong>#<strong> create tap1 for slackware-current</strong>
tunctl -t tap1</strong>
<strong>ifconfig tap1 up</strong>
<strong>brctl addif br0 tap1</strong></p>




<p><strong>五、安装windows server 2003</strong>
windows方面我们使用virtio来提高磁盘和网络的IO性能，那么这里得准备virtio的两个文件：<br />
1、<a href="http://alt.fedoraproject.org/pub/alt/virtio-win/latest/images/bin/virtio-win-0.1-30.iso">http://alt.fedoraproject.org/pub/alt/virtio-win/latest/images/bin/virtio-win-0.1-30.iso
</a>2、<a href="http://www.linuxwind.org/download/virtio-win-1.1.16.vfd">http://www.linuxwind.org/download/virtio-win-1.1.16.vfd</a></p>




<p>来说明一下，virtio-win-0.1-30.iso里面放有windows的virtio磁盘控制器和网卡的驱动，是安装2003成功后，进入系统后进行相关驱动安装或更新用的。而virtio-win-1.1.16.vfd是一个软盘镜像，是用来安装2003时，通过F6来指定磁盘驱动用的。</p>




<p>在使用qemu-kvm前，需要载入kvm内核模块：
<strong>modprobe kvm_intel</strong></p>




<p>创建大小为20G的win2003.qcow2磁盘文件：
<strong>qemu-img create -f qcow2 win2003.qcow 20G</strong></p>




<p>启动KVM进行2003的安装：
<strong>qemu-kvm -m 768 -boot d -drive file=/xxx/win2003.qcow2,cache=writeback,if=virtio -fda /xxx/virtio-win-1.1.16.vfd -cdrom /xxx/Windows.Server.2003.R2.iso -vnc :1</strong>
命令运行后，没有提示任何错误就应该是没有问题了，打开tightVNC，登录到该远程桌面进行安装的操作（VNC登录地址是IP1:1）。启动安装是按F6，之后再安“S”，进入后选择“Redhat I/O for windows 2003”相应的驱动，32或64位。之后的安装过程是和平时装2003的过程一样。</p>




<p>安装成功并启动一次，之后将2003关机，换用另外一条指令来启动虚拟机：
<strong>qemu-kvm -m 768 -net nic,model=virtio -net tap,ifname=tap0,script=no -drive file=/xxx/win2003.qcow2,cache=writeback,if=virtio -cdrom /xxx/virtio-win-0.1-30.iso -vnc :1
</strong>此次启动将载入virtio-win-0.1-30.iso镜像，包含有磁盘控制器和网卡的驱动<br />
启动后，同样使用VNC远程接入，把2003里的网卡安装好，也可以把磁盘控制器也升级一下，因为之前软盘镜像带的是2010年的，现在iso里包含的是最新的驱动
<img src="/images/blog/tm1.png">
到这里，windows 2003安装步骤就完毕了，之后就像平时新装系统设定IP，网关什么的就好，并开启windows远程桌面方便后续的远程操作</p>




<p><strong>六、安装slackware-current
</strong>另一台虚拟机我装的是slackware-current，安装步骤要比windows 2003简单一些</p>




<p>创建大小为20G的slackware.qcow2磁盘文件：
<strong>qemu-img create -f qcow2 slackware.qcow 20G</strong></p>




<p>启动KVM进行slackware的安装：
<strong>qemu-kvm -m 768 -boot d -drive file=/xxx/slackware.qcow2,cache=writeback -cdrom /xxx/slackware-13.37-install-d1.iso -vnc :1</strong>
用VNC连接，像平时一样来安装，current的安装方法就略去了</p>




<p>安装成功后就换另外一条指令来启动：
<strong>qemu-kvm -m 768 -net nic -net tap,ifname=tap1,script=no -drive file=/xxx/slackware.qcow2,cache=writeback -vnc :1</strong>
之后进行一些必要的设定，之后就可以用ssh来连接</p>




<p><strong>七、最终的/etc/rc.d/rc.local</strong>
到这里，两台KVM虚拟机都安装设置成功了，所以就需要将其加入到rc.local脚本，使两个虚拟机在开机时随系统启动，下面是我的rc.local：
<strong># create brige</strong>
<strong>ifconfig eth0 0.0.0.0</strong>
<strong>brctl addbr br0</strong>
<strong>ifconfig br0 x.x.x.x(物理主机IP) netmask 255.255.255.0(物理主机掩码) up</strong>
<strong>route add default gw x.x.x.x(网关) br0</strong>
<strong>brctl addif br0 eth0</strong></p>




<p><strong># create tap0 for windows 2003</strong>
<strong>tunctl -t tap0</strong>
<strong>ifconfig tap0 up</strong>
<strong>brctl addif br0 tap0</strong></p>




<p><strong>#<strong> create tap1 for slackware-current</strong>
tunctl -t tap1</strong>
<strong>ifconfig tap1 up</strong>
<strong>brctl addif br0 tap1</strong></p>




<p><strong># macaddr</strong>
<strong>macaddr1=`printf 'DE:AD:BE:EF:%02X:%02X\n' $((RANDOM%256)) $((RANDOM%256))`</strong>
<strong>macaddr2=`printf 'DE:AD:BE:EF:%02X:%02X\n' $((RANDOM%256)) $((RANDOM%256))`</strong></p>




<p><strong># start kvm</strong>
<strong>qemu-kvm -m 768 -drive file=/home/qcow2/win2003.qcow2,cache=writeback,if=virtio -net nic,model=virtio,macaddr=$macaddr1 -net tap,ifname=tap0,script=no -daemonize -nographic -localtime</strong>
<strong>qemu-kvm -m 768 -drive file=/home/qcow2/slackware.qcow2,cache=writeback -net nic,macaddr=$macaddr2 -net tap,ifname=tap1,script=no -daemonize -nographic -localtime</strong>
启动参数多了个mac地址，是用随机数生成的，建议生成mac地址后将其固定，不然每次启动机器都会有不同的mac地址……<br />
另外，因为不需要用vnc，所以参数里也没有vnc的启动参数，这样也是保证安全的一个做法<br />
-daemonize：让KVM在后台运行<br />
-nographic：关闭图形输出<br />
-localtime：让虚拟机的时间显示正常</p>




<p><strong>八、总结与展望</strong>
到这里，文章也快要结束了。<br />
文中没有使用libvirt来进行虚拟机管理，这个后续可以进行改进，并且也没有相应的watchdog，这也是一个不足。<br />
文中所讲述是一个相对为通用的方法，希望读者能有所启发。<br />
如果你按照这些步骤进展顺利，那么恭喜你:)
<strong></strong></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hash Collision DoS问题值得关注]]></title>
    <link href="http://imlcl.com/blog/2012/01/06/hash-collision-dos/"/>
    <updated>2012-01-06T00:00:00+08:00</updated>
    <id>http://imlcl.com/blog/2012/01/06/hash-collision-dos</id>
    <content type="html"><![CDATA[<p>请细请看<a href="http://coolshell.cn/articles/6424.html">http://coolshell.cn/articles/6424.html</a></p>




<p>搞笑的是Perl没有这问题，这问题在2003年的一篇论文中已报告，但没人重视</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[框架框架]]></title>
    <link href="http://imlcl.com/blog/2012/01/05/framework-1/"/>
    <updated>2012-01-05T00:00:00+08:00</updated>
    <id>http://imlcl.com/blog/2012/01/05/framework-1</id>
    <content type="html"><![CDATA[<p>年近岁晚，谈总结，谈展望，谈奖金，谈计划……</p>




<p>不过最近我更多在考虑学校未来信息化框架，或者叫试验性框架，还没有到最终整合的地步。就目前来说，核心的部分都是我用PHP+MySQL来实现的，功能上基本满足，扩展性不强，外围还有腾讯RTX和现成签到平台等的整合，后续可能还需要整合其它现成平台，还有使用Rails新编写的存档系统和论文系统。就这样看来，扩展性和可维护性就相形见绌，扩展性和可维护性无从谈起。</p>




<p>起初引入Rails是为了节省更多的工作量，但事实上也初步达到了。之前研究Drupal 6，发现不少可用之处，最近也发现Drupal 7，感觉操作界面上有很大进步，这也进一步肯定了当时把Drupal引入到学校成为核心平台的猜想。所以最近都在抓紧时间研究《Drupal 7 Module Development》，这书不错，推荐一下。</p>




<p>不过Drupal的缺点就是比较慢，也就是牺牲性能换取灵活性。那么从这个来看，我觉得Drupal这个框架是先进的，所以现在我也倾向选用此框架来整合现有的信息化平台。从学校情况来看，即使未来人数再扩充一倍也能很好地满足。再由于考虑到后期维护的工作量，所以放弃Rails和CakePHP作为核心平台的开发框架，至少短期来说是这样。毕间Drupal的基础模块、三方模块和自定义模块都能很好地解决现有问题，并且也适用于未来LDAP的整合。目前需要抓紧时间打通各个环节，之前要赶工了。</p>




<p>Linode的Tokyo节点的确不错，建议迁移至此，不过最近也发现广东电信这边晚上的ping值上到160ms，早上又会降回70ms左右，不知搞什么。开了ticket问linode的客服，那边也暂时没有收到相关的反映。如果没问题就不回fremont了，还有随时退款也是linode的一大优势。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于易网库ASP性能]]></title>
    <link href="http://imlcl.com/blog/2011/12/21/asp/"/>
    <updated>2011-12-21T00:00:00+08:00</updated>
    <id>http://imlcl.com/blog/2011/12/21/asp</id>
    <content type="html"><![CDATA[<p>因为某些原因，学校网站需要暂时放到免备案主机空间，就选了朋友感觉不错的<a href="http://www.webweb.com/">易网库</a></p>




<p>买的是无限型，当时比较恶心就是独立IP要自己买，400元啊，现在都有送的，~！@#￥%……&amp;*（）</p>




<p>其实第一个感觉就是慢，只是绑定四个站，访问流量也不大，我就是觉得奇怪。联系客服他们又说很正常，但校园网访问的确很慢，还常常访问不到（这个估计和校园网线路有关，因为我用其它线路访问没有问题）。</p>




<p>直到最近有老师反应该说登陆进系统后，不断要求再登陆，前几天持续出现500错误。今天实在顶不顺，终于找到一次机会网站是出问题的，又可以让他们看到的了。经过排查，他们把.NET版本降为1.X就好了。因为系统默认选的是.NET最高版本，其实我对这东西也不怎么懂，但也不可能差这么远吧？（之前试过重启服务器也不能解决问题）问了朋友说这个应该不会影响这么大，但事实上测试表明差很远，现在网站比以前畅顺多了，即使是高峰期。反正我现在调到PHP解析（客服说这样会比较快），呃……</p>




<p>没问题就好，等明年再说。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You're in VirtualBox]]></title>
    <link href="http://imlcl.com/blog/2011/04/28/you_are_in_virtualbox/"/>
    <updated>2011-04-28T00:00:00+08:00</updated>
    <id>http://imlcl.com/blog/2011/04/28/you_are_in_virtualbox</id>
    <content type="html"><![CDATA[<p>如题，没错，大头龙仔Blog被我移至VirtualBox虚拟机里了，运行环境是ArchLinux + Nginx</p>




<p>一直都想搞个这样的东西，好你有点像自建VPS的味道，哈哈。</p>




<p>这样子一个服务器就可以共存多种操作系统，解决一直以来自己遇到的N多问题，LOL</p>

]]></content>
  </entry>
  
</feed>
